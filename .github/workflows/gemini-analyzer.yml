name: Gemini Transcript Analyzer

on:
  workflow_run:
    workflows: ["Extract Podcast Transcript"]
    types:
      - completed
  push:
    paths:
      - 'data/*_transcript.json'
  workflow_dispatch:
    inputs:
      process_all:
        description: 'Process all transcript files (not just new ones)'
        required: false
        type: boolean
        default: false

jobs:
  analyze:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
      
      - name: Create output directory
        run: mkdir -p website/data
      
      - name: Process transcript files
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Get process_all input value
          PROCESS_ALL="${{ github.event.inputs.process_all }}"
          
          # Determine which files to process based on the trigger
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${PROCESS_ALL}" == "true" ]; then
            echo "Processing all transcript files"
            find data -name "*_transcript.json" -type f | while read -r file; do
              echo "Processing $file"
              python scripts/gemini_analyzer.py --file "$file"
            done
          elif [ "${{ github.event_name }}" == "push" ]; then
            echo "Processing only added or modified transcript files"
            git diff --name-only HEAD^ HEAD | grep "_transcript.json" | while read -r file; do
              echo "Processing $file"
              python scripts/gemini_analyzer.py --file "$file"
            done
          elif [ "${{ github.event_name }}" == "workflow_run" ]; then
            echo "Processing the most recent transcript file"
            latest=$(ls -t data/*_transcript.json | head -1)
            echo "Processing $latest"
            python scripts/gemini_analyzer.py --file "$latest"
          else
            echo "Processing all transcript files (default)"
            find data -name "*_transcript.json" -type f | while read -r file; do
              echo "Processing $file"
              python scripts/gemini_analyzer.py --file "$file"
            done
          fi
      
      - name: Commit processed data
        run: |
          # Check if there are any changes to commit
          if git diff --name-only | grep -q "website/data"; then
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'actions@github.com'
            git add website/data/
            git commit -m "Add analyzed Gegenwartscheck data [skip ci]"
            git push
            echo "Committed new Gegenwartscheck data"
          else
            echo "No changes to commit"
          fi 