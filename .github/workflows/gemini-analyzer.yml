name: Gemini Transcript Analyzer

on:
  workflow_dispatch:
    inputs:
      specific_file:
        description: 'Specific transcript file to process (leave empty to process all)'
        required: false
        type: string
      process_all:
        description: 'Process all transcript files (not just new ones)'
        required: false
        type: boolean
        default: false

# Add permissions to allow reading artifacts from other workflows
permissions:
  actions: read
  contents: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
      
      - name: Create output directory
        run: mkdir -p data/analyses
      
      - name: Process transcript files
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Get process_all and specific_file input values
          PROCESS_ALL="${{ github.event.inputs.process_all }}"
          SPECIFIC_FILE="${{ github.event.inputs.specific_file }}"
          
          # Determine which files to process based on the inputs
          if [ -n "${SPECIFIC_FILE}" ]; then
            echo "Processing specific file: $SPECIFIC_FILE"
            python scripts/gemini_analyzer.py --file "$SPECIFIC_FILE"
          elif [ "${PROCESS_ALL}" == "true" ]; then
            echo "Processing all transcript files"
            find data/transcripts -name "*_transcript.json" -type f | while read -r file; do
              echo "Processing $file"
              python scripts/gemini_analyzer.py --file "$file"
            done
          else
            echo "Processing all transcript files (default)"
            find data/transcripts -name "*_transcript.json" -type f | while read -r file; do
              echo "Processing $file"
              python scripts/gemini_analyzer.py --file "$file"
            done
          fi
      
      - name: Commit processed data
        run: |
          # Check if there are any changes to commit
          if git status --porcelain data/analyses | grep -q .; then
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'actions@github.com'
            
            # Stash any unstaged changes
            git stash -u
            
            # Pull the latest changes to avoid conflicts
            git pull origin main
            
            # Pop the stashed changes
            git stash pop || true
            
            git add data/analyses/
            git commit -m "Add analyzed Gegenwartscheck data [skip ci]"
            git push
            echo "Committed new Gegenwartscheck data"
          else
            echo "No changes to commit"
          fi 