name: Gemini Transcript Analyzer

on:
  workflow_dispatch:
    inputs:
      specific_file:
        description: 'Specific transcript file to process (leave empty to process all)'
        required: false
        type: string
      process_all:
        description: 'Process all transcript files (not just new ones)'
        required: false
        type: boolean
        default: false

# Add permissions to allow reading artifacts from other workflows and deploying to GitHub Pages
permissions:
  actions: read
  contents: write
  pages: write
  id-token: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Set up error handling and debugging
        run: |
          set -euo pipefail
          set -x
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
      
      - name: Lint with flake8
        run: |
          python -m flake8 scripts/ --max-line-length=120
      
      - name: Check formatting with black
        run: |
          python -m black --check scripts/
      
      - name: Create output directory
        run: mkdir -p data/analyses
      
      - name: Process transcript files
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          set -euo pipefail
          set -x
          PROCESS_ALL="${{ github.event.inputs.process_all }}"
          SPECIFIC_FILE="${{ github.event.inputs.specific_file }}"
          if [ -n "$SPECIFIC_FILE" ]; then
            echo "Processing specific file: $SPECIFIC_FILE"
            python scripts/gemini_analyzer.py --file "$SPECIFIC_FILE"
          else
            echo "Processing all transcript files"
            find data/transcripts -name "*_transcript.json" -type f | while read -r file; do
              echo "Processing $file"
              python scripts/gemini_analyzer.py --file "$file"
            done
          fi
      
      - name: Commit processed data
        run: |
          set -euo pipefail
          set -x
          if git status --porcelain data/analyses | grep -q .; then
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'actions@github.com'
            git pull --rebase origin main
            git add data/analyses/
            git commit -m "Add analyzed Gegenwartscheck data [skip ci]"
            git push
            echo "Committed new Gegenwartscheck data"
          else
            echo "No changes to commit"
          fi

  build-and-deploy-site:
    needs: analyze
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get all history
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
      
      - name: Run Data Aggregation Script
        run: |
          python scripts/aggregate_data.py

      - name: Commit Updated site_data.json
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Check if docs/site_data.json has changed or is new
          if ! git diff --quiet docs/site_data.json; then
            echo "docs/site_data.json has changed or is new. Committing and pushing."
            git add docs/site_data.json
            git commit -m "Update site_data.json for GitHub Pages [skip ci]"
            git push
          else
            echo "No changes to docs/site_data.json. Nothing to commit."
          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4