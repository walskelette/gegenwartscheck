name: Process Podcast Episodes

on:
  workflow_run:
    workflows: ["Get Podcast Episode Links"]
    types:
      - completed
  workflow_dispatch:

# Add permissions to allow reading artifacts from other workflows and committing to the repo
permissions:
  actions: write
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    outputs:
      episode_links: ${{ steps.get-episode-links.outputs.episode_links }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download artifact
        if: github.event_name == 'workflow_run'
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }},
            });
            
            const matchArtifact = artifacts.data.artifacts.find(artifact => {
              return artifact.name == "episode-links"
            });
            
            if (!matchArtifact) {
              core.setFailed('No episode-links artifact found');
              return;
            }
            
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            
            const fs = require('fs');
            fs.writeFileSync('episode-links.zip', Buffer.from(download.data));
      
      - name: Extract artifact
        if: github.event_name == 'workflow_run'
        run: |
          unzip -o episode-links.zip
          cat episode_links.json
      
      - name: Load episode links (workflow dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo '[{"title":"Test Episode","url":"https://podcasts.apple.com/de/podcast/die-sogenannte-gegenwart/id1522895163?i=1000695431521"}]' > episode_links.json
          cat episode_links.json
      
      - name: Set output
        id: get-episode-links
        run: |
          # Use jq to format the JSON properly
          EPISODE_LINKS=$(cat episode_links.json | jq -c .)
          echo "episode_links=${EPISODE_LINKS}" >> $GITHUB_OUTPUT
      
      - name: Create data/raw directory
        run: |
          mkdir -p data/raw
  
  process-episodes:
    needs: setup
    runs-on: macos-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        episode: ${{ fromJSON(needs.setup.outputs.episode_links) }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Create data/raw directory
        run: |
          mkdir -p data/raw
      
      - name: Launch Podcasts
        run: |
          osascript -e '
            tell application "Podcasts" to activate
            delay 10
          '
      
      - name: Attempt to Press Enter Instead of Continue
        run: |
          osascript -e '
            tell application "System Events"
              tell process "Podcasts"
                try
                  keystroke return
                end try
              end tell
            end tell
            delay 10
          '
      
      - name: Open Podcast Episode
        run: |
          osascript -e '
            tell application "Podcasts"
              open location "${{ matrix.episode.url }}"
              delay 10
            end tell
          '
      
      # Click to show transcript menu
      - name: Click at Coordinates (1418, 384)
        run: |
          osascript -e '
            tell application "System Events"
              tell process "Podcasts"
                set frontmost to true
                try
                  click at {1418, 384}
                  delay 0.1
                  key code 125
                  key code 125
                  key code 125
                  key code 125
                  key code 125
                  key code 125
                  key code 125
                end try
              end tell
            end tell
            delay 10
          '
      
      - name: Open Transcript
        run: |
          osascript -e '
            tell application "System Events"
              tell process "Podcasts"
                set frontmost to true
                try
                  keystroke return
                end try
              end tell
            end tell
            delay 10
          '
      
      - name: Create safe filename
        id: safe-filename
        run: |
          # Use episode ID for filename instead of title
          EPISODE_ID="${{ matrix.episode.episode_id }}"
          # Fallback to safe title if episode_id is not available (for backward compatibility)
          if [ -z "$EPISODE_ID" ]; then
            EPISODE_ID=$(echo "${{ matrix.episode.title }}" | sed 's/[^a-zA-Z0-9]/_/g')
            echo "Warning: Using title as filename because episode_id is not available"
          fi
          echo "safe_title=$EPISODE_ID" >> $GITHUB_OUTPUT
      
      - name: Zip the Podcasts Cache Folder
        run: |
          zip -r "${{ steps.safe-filename.outputs.safe_title }}_cache.zip" "$HOME/Library/Group Containers/243LU875E5.groups.com.apple.podcasts/Library/Cache"
      
      - name: Upload Cache Folder to data/raw
        run: |
          mkdir -p data/raw
          mv "${{ steps.safe-filename.outputs.safe_title }}_cache.zip" "data/raw/${{ steps.safe-filename.outputs.safe_title }}_cache.zip"
          echo "Cache saved to data/raw/${{ steps.safe-filename.outputs.safe_title }}_cache.zip"
      
      - name: Upload Cache as Artifact (backup)
        uses: actions/upload-artifact@v4
        with:
          name: transcript-cache-${{ github.run_id }}-${{ strategy.job-index }}
          path: "data/raw/${{ steps.safe-filename.outputs.safe_title }}_cache.zip"
      
      # Commit changes to data/raw
      - name: Commit Changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add data/raw/
          git commit -m "Add transcript cache for episode ${{ matrix.episode.title }}" || echo "No changes to commit"
          git push